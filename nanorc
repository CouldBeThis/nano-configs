


############### MISC BEHAVIOR ##################
## . . . . . . . . . . . . . . . . . . . . . .##
##

##set mouse seems to toggle certain mouse abilities on while others off; doesn't jive with documentation
#set mouse

## Save the cursor position of files between editing sessions. The cursor position is 
## remembered for the 200 most-recently edited files.
set positionlog

## When reading in a file with ^R, insert it into a new buffer by default.
#set multibuffer

## When neither the file’s name nor its first line give a clue, try using libmagic to determine the applicable syntax. (Calling libmagic can be relatively time consuming. It is therefore not done by default.)
#set magic

## Scroll the buffer contents per half-screen instead of per line.
#set jumpyscrolling

################## TEXT FLOW ###################
## . . . . . . . entire screen . . . . . . . .##
##

## Set the target width for justifying and automatic hard-wrapping at this number of columns. If the value is 0 or less, wrapping will occur at the width of the screen minus number columns, allowing the wrap point to vary along with the width of the screen if the screen is resized. The default value is −8.
#set fill number

## enable wrapping (softwrap) at spaces and tabs rather than cutting in the middle of a word (atblanks)
set softwrap
set atblanks

## Don’t hard-wrap text at all. used to be called "set nowrap"
## (documentation is unclear about the meaning of this option)
#unset breaklonglines

################# SELECTIONS ###################
## . . text flow on a word-by-word basis . . .##
##

##Set the regular expression for matching the quoting part of a line. The default value is "^([ \t]*([!#%:;>|}]|//))+". (Note that \t stands for an actual Tab character.) This makes it possible to rejustify blocks of quoted text when composing email, and to rewrap blocks of line comments when writing source code.
# set quotestr "regex"

## Detect word boundaries differently by treating punctuation characters as parts of words.
# set wordbounds

## Specify which other characters (besides the normal alphanumeric ones) should be considered as parts of words. When using this option, you probably want to unset wordbounds.
#set wordchars "characters"

## Set the characters treated as closing punctuation when justifying paragraphs. This may not include blank characters. Only the specfified closing punctuation, optionally followed by closing brackets (see brackets), can end sentences. The default value is "!.?".
#set punct "characters"

################ FIND & REPLACE ################
## . . . . . . . . . . . . . . . . . . . . . .##
##

## Do case-sensitive searches by default
#set casesensitive

## Remember the used search/replace strings for the next session.
#set historylog

## Do regular-expression searches by default. Regular expressions in nano are of the extended type (ERE).
#set regexp

############## KEYBOARD INTERFACE ##############
## . . . . . . . . . . . . . . . . . . . . . .##
##

## Use cut-from-cursor-to-end-of-line by default, instead of cutting the whole line.
#set cutfromcursor

# Automatically indent a newly created line to the same number of tabs and/or spaces as 
# the previous line (or as the next line if the previous line is the beginning of a 
# paragraph).
set autoindent

## Convert each typed tab to spaces -- to the number of spaces that a tab at that position would take up.
#set tabstospaces
set tabsize 4

## Make Ctrl+Right and Ctrl+Delete stop at word ends instead of beginnings.
#set afterends

## Make the Home key smarter. When Home is pressed anywhere but at the very beginning of non-whitespace characters on a line, the cursor will jump to that beginning (either forwards or backwards). If the cursor is already at that position, it will jump to the true beginning of the line.
#set smarthome

## Let an unmodified Backspace or Delete erase the marked region (instead of a single character, and without affecting the cutbuffer).
## does not work on NETBOOK
set zap

## Interpret the Delete and Backspace keys differently so that both Backspace and Delete work properly. You should only use this option when on your system either Backspace acts like Delete or Delete acts like Backspace.
# set rebinddelete


################# KEYBINDINGS ##################
## . . . . . . . . . . . . . . . . . . . . . .##
##

## NETBOOK:
## 	^		=	ctrl
##	M-		=	alt
##	Sh-		=	shift
##	???		=	caps
##	???		=	function keys

##The format of key should be one of:
##  ^X —— where X is a Latin letter, or one of several ASCII characters (@, ], \, ^, _), or the word "Space". Example: ^C.
##    M-X —— where X is any ASCII character except [, or the word "Space". Example: M-8.
##    Sh-M-X —— where X is a Latin letter. Example: Sh-M-U. By default, each Meta+letter keystroke does the same as the corresponding Shift+Meta+letter. But when any Shift+Meta bind is made, that will no longer be the case, for all letters.
##    Fn —— where n is a numeric value from 1 to 24. Example: F10. (Often, F13 to F24 can be typed as F1 to F12 with Shift.)
##    Ins or Del. 

## ctrl + backspace = delete entire word to the left
bind ^H chopwordleft main

bind M-X exit all
bind ^S savefile main
#bind ^W writeout main
#bind ^O insert main
bind M-H help all
bind M-H exit help
bind ^F whereis all
bind ^G findnext all
#bind ^B wherewas all
#bind ^D findprevious all
bind ^R replace main
#bind M-X flipnewbuffer all

#unbind M-X all
bind ^K cut all
bind ^C copy all
bind ^V paste all
## nano will not start if ^C is bound to something other than the default unless cancel in yesno menu has a new binding assigned to it
bind ^C cancel yesno

#bind ^P location main
bind ^A mark main
#unbind ^K main
#unbind ^U all
#unbind ^N main
#unbind ^Y all
#unbind M-J main
#unbind M-T main
#bind ^T gotoline main
#bind ^T gotodir browser
bind ^Y speller main

# Toggles the display of line numbers in front of the text.
unbind M-L all
bind M-L linenumbers all

# Goes to a specific line (and column if specified). Negative numbers count from the end of the file (and end of the line).
bind M-G gotoline all

## Throw away the current line (or the marked region). (This function is bound by default to <Meta+Delete>.)
bind M-D zap main


## original
##bind M-U undo main
##bind M-R redo main
unbind ^Z all
bind ^Z undo main
## disabled because it produces the error of being "invalid" (NETBOOK)
#bind M^Z redo main
#bind ^U undo main
#bind ^E redo main


## remove shortcut to invoke linter
unbind M-B all
## remove shortcut to format/arrange/manipulate buffer
unbind M-F all

################### INTERFACE ##################
## . . . . .  . . . . VISUAL . . . . . . . . .##

## display line numbers on the left-hand side
set linenumbers

## Display a "scrollbar" on the righthand side of the edit window.
set indicator

## Draw a vertical stripe at the given column, to help judge the width of the text.  (The color of the stripe can be changed with set stripecolor.)
# set guidestripe 72

## Suppress the title bar and instead show information about the current buffer at the bottom of the screen, in the space for the status bar. 
#set minibar

## Use the top-right corner of the screen for showing some state flags: I when auto-indenting, M when the mark is on, L when hard-wrapping (breaking long lines), R when recording a macro, and S when soft-wrapping. When the buffer is modified, a star (*) is shown after the filename in the center of the title bar. 
#set stateflags

## Set the two characters used to indicate the presence of tabs and spaces. They must be single-column characters. The default pair for a UTF-8 locale is "»⋅", and for other locales ">.".
#set whitespace "characters"

## Constantly display the cursor position in the status bar. This overrides the option quickblank.
#set constantshow

## Don’t display the two help lines at the bottom of the screen.
#set nohelp

## Make status-bar messages disappear after 1 keystroke instead of after 20. Note that option constantshow overrides this. When option minibar or zero is in effect, quickblank makes a message disappear after 0.8 seconds instead of after the default 1.5 seconds.
# set quickblank

## Hide all elements of the interface (title bar, status bar, and help lines) and use all rows of the terminal for showing the contents of the buffer. The status bar appears only when there is a significant message, and disappears after 1.5 seconds or upon the next keystroke. With M−Z the title bar plus status bar can be toggled. With M−X the help lines.
# set zero


################### COLORS #####################
## . . . . . . . . . . . . . . . . . . . . . .##
##
## see notes at https://github.com/CouldBeThis/nano-configs/blob/main/templates/colors.nanorc
##
## FORMAT
## set ELEMENT [bold,][italic,]fgcolor,bgcolor
##    * if only one color is given, will be fgcolor
## * NO SPACE after comma!

## - - - - - - All edges of window  - - - - - ##
##
## Use bold instead of reverse video for the title bar, status bar, key combos, function tags, line numbers, and selected text (toggled on if uncommented, does not take any colors)
set boldtext

## - - - - - - Top edge of window  - - - - - ##
##
## titlebar 
set titlecolor #000,slate

## - - - - - - Vertical elements - - - - - - ##
##
## Line numbers
set numbercolor slate,black
##
## For the indicator alias "scrollbar"
set scrollercolor slate,sea
##
## For the vertical guiding stripe. 
# set stripecolor 

## - - - - - - Text editing area - - - - - - ##
##
## Selected text
set selectedcolor bold,mauve,black
##
## Highlighting a search match
set spotlightcolor italic,white,brick
##
## For the prompt bar (default = titlecolor)
# set promptcolor 
##
## - - - - - Bottom edge of window - - - - - ##


## test
set errorcolor bold,mauve,white
set minicolor bold,italic,mauve,white
set statuscolor mauve,white

set functioncolor red,mauve
##end test


## Status bar when an error message is displayed
set errorcolor bold,mauve,white
##
## For the minibar (default = titlecolor)
# set minicolor bold,black,mauve
##
## For the status bar
set statuscolor white,lagoon
##
## Help lines at bottom of screen
## Shortcut descriptions
set functioncolor sea
## Shortcut key combos
set keycolor sky


############# SYNTAX HIGHLIGHTING ##############
## . . . . . . . . . . . . . . . . . . . . . .##

include ~/.config/nano/nanorc-syntax/*.nanorc

## ,,,,,;;;;;]]]]]/////|\\\\\[[[[[[;;;;;,,,,, ##
################################################
## . . . . . . . . . . . . . . . . . . . . . .##
## - - - - - - - - - - - - - - - - - - - - - -##
##
## ,,,,,;;;;;]]]]]/// eof \\\[[[[[[;;;;;,,,,, ##
